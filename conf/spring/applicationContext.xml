<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws" 
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
	http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
	">
	<description></description>
	<!-- 导入cxf相关配置  start -->
	<import resource="classpath:META-INF/cxf/cxf.xml"/> 
	<import resource="classpath:cxf/cxf-jaxws-server.xml"/> 
	
	<!-- 导入redis相关配置项 -->
	<import resource="classpath:redis/redisConfig.xml"/> 
	 
	<!-- 配置自动扫描com.kmzc下的所有beans，除去SpringMVC已经管理的bean -->
	<context:component-scan base-package="com.kmzc.*"/>
	<!-- 文件上传组件配置-->   
	<bean id="multipartResolver"  
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
	        <!-- 设置上传文件的最大尺寸为500MB=524288000  -->
	    <property name="maxUploadSize" value="524288000"/>
	    <property name="defaultEncoding" value="UTF-8" />
	</bean> 
		
	<!-- 配置数据源-->
	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/JDBC/MAIN" />
 
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@10.100.30.249:1521:orcl" />
		<property name="username" value="yxadmin" />
		<property name="password" value="yxadmin" />
	</bean> -->
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!--  开启基于注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
		
	<!-- 整合mybatis 目的：1、spring管理所有组件。mapper的实现类。@Autowired:自动注入mapper；2、spring用来管理事务，spring声明式事务-->
	<!--创建出SqlSessionFactory对象  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- configLocation指定全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<!--mapperLocations: 指定mapper文件的位置-->
		<property name="mapperLocations" value="classpath:mybatis/mappers/**/*.xml"></property>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="SIMPLE"></constructor-arg>
	</bean>
	
	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>
	
	<!-- 在applicationContext使用配置Service -->
 <!--    <bean class="com.kmzc.service.wechat.TimerService" id="timerService"></bean>
	<bean class="com.kmzc.service.wechat.WebappService" id="webappService"></bean> -->
	<!-- 扫描所有的mapper接口的实现，让这些mapper能够自动注入；base-package：指定mapper接口的包名 -->
	<mybatis-spring:scan base-package="com.kmzc.dao.*"/>
</beans>
